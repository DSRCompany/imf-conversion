//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.08.11 at 01:51:42 PM MSK 
//


package org.smpte_ra.reg._2003._2012;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ImageSensorReadoutModeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ImageSensorReadoutModeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="ImageSensorReadoutMode_InterlacedField"/>
 *     &lt;enumeration value="ImageSensorReadoutMode_InterlacedFrame"/>
 *     &lt;enumeration value="ImageSensorReadoutMode_ProgressiveFrame"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ImageSensorReadoutModeType")
@XmlEnum
public enum ImageSensorReadoutModeType {

    @XmlEnumValue("ImageSensorReadoutMode_InterlacedField")
    IMAGE_SENSOR_READOUT_MODE_INTERLACED_FIELD("ImageSensorReadoutMode_InterlacedField"),
    @XmlEnumValue("ImageSensorReadoutMode_InterlacedFrame")
    IMAGE_SENSOR_READOUT_MODE_INTERLACED_FRAME("ImageSensorReadoutMode_InterlacedFrame"),
    @XmlEnumValue("ImageSensorReadoutMode_ProgressiveFrame")
    IMAGE_SENSOR_READOUT_MODE_PROGRESSIVE_FRAME("ImageSensorReadoutMode_ProgressiveFrame");
    private final String value;

    ImageSensorReadoutModeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ImageSensorReadoutModeType fromValue(String v) {
        for (ImageSensorReadoutModeType c: ImageSensorReadoutModeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
