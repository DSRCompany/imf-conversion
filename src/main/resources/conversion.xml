<?xml version="1.0" encoding="UTF-8"?>
<IMFUtilityConversion xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                      xmlns="http://conversion.imf.netflix.com">
    <formats>
        <!--
            specific configuration for each format
        -->
        <format name="ddp">
            <!--
                tmp context for temporary template parameters
            -->
            <tmpContext>
                <param id="videoEncoded">G:\Netflix\test\encode\tmp\output.x264</param>
                <param id="audioEncoded">G:\Netflix\test\encode\tmp\output.pcm</param>
            </tmpContext>

            <!--
                Destination parameters for conversion
             -->
            <conversion>
                <video>
                    <size>1920:1080</size>
                    <fps>25</fps>
                    <pixelFormat>422</pixelFormat>
                    <bitDepth>10</bitDepth>
                </video>
                <audio>
                    <sampleRate>48000</sampleRate>
                    <bitsSample>24</bitsSample>
                </audio>
            </conversion>

            <formatConfigurations>
                <formatConfiguration name="main">
                    <!--
                        1. decode each video segment and redirect output to encode's input
                           => flatten encoded video
                    -->
                    <pipe>
                        <sequence>
                            <execEachSegment type="video" name="decode_video">
                                %{tool.ffmpeg} -y -i %{segment.input} -ss %{segment.startTime}
                                -t %{segment.duration} -an -vf scale=1920:1080,fps=25
                                -pix_fmt yuv422p10le -f rawvideo -
                            </execEachSegment>
                        </sequence>
                        <execOnce name="encode_video">
                            %{tool.x264} --input-res 1920x1080 --input-csp i422 --input-depth 10 -
                            --colorprim bt709 --transfer bt709 --colormatrix bt709 --tune psnr
                            --fps 25/1 --interlaced --force-cfr --output-csp i422
                            --avcintra-class 100 -o %{tmp.videoEncoded}
                        </execOnce>
                    </pipe>

                    <!--
                        2. decode each audio segment and redirect output to encode's input
                           => flatten encoded audio
                    -->
                    <pipe>
                        <sequence>
                            <execEachSegment type="audio" name="decode_audio">
                                %{tool.ffmpeg} -i %{segment.input} -ss %{segment.startTime}
                                -t %{segment.duration} -vn -af aresample=48000
                                -acodec pcm_s24le -f s24le -
                            </execEachSegment>
                        </sequence>
                        <execOnce name="encode_audio">
                            %{tool.ffmpeg} -f s24le -i - -vn -c:a copy -f s24le %{tmp.audioEncoded}
                        </execOnce>
                    </pipe>

                    <!--
                        3. create output .mxf from flatten encoded video and audio
                    -->
                    <execOnce name="muxing_mxf">
                        %{tool.bmx} -t as11op1a -o %{dynamic.outputMxf}
                        --avci100_1080i %{tmp.videoEncoded}
                        -q 24 -s 48000 --audio-chan %{dynamic.audioChannels}
                        --pcm %{tmp.audioEncoded}
                    </execOnce>

                </formatConfiguration>
            </formatConfigurations>

        </format>
    </formats>
</IMFUtilityConversion>

