//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.08.11 at 01:51:42 PM MSK 
//


package org.smpte_ra.reg._2003._2012;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.smpte_ra.reg._395._2014._13._1.aaf.AES3PCMDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.AIFCDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.ANCDataDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.AuxDataEssenceDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.AuxiliaryDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.BWFImportDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.CDCIDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.DCPCMSoundDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.DCTimedTextDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.DataEssenceDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.DateTimeDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.FilmDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.HTMLDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.HTMLParsedTextDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.ImportDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.MPEGAudioDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.MPEGVideoDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.MultipleDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.RGBADescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.RP217Descriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.RecordingDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.STLDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.SoundDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.TIFFDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.TIFFPictureEssenceDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.TapeDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.VBIDataDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.VC1VideoDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.WAVEDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.WAVEPCMDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.XMLDescriptor;


/**
 * <p>Java class for EssenceDescriptorStrongReference complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="EssenceDescriptorStrongReference">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}AIFCDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}DateTimeDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}DataEssenceDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}RP217Descriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}AuxDataEssenceDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}DCTimedTextDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}VBIDataDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}ANCDataDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}HTMLParsedTextDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}XMLDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}STLDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}MultipleDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}HTMLDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}RGBADescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}TIFFPictureEssenceDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}CDCIDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}MPEGVideoDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}VC1VideoDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}TIFFDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}WAVEDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}SoundDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}WAVEPCMDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}AES3PCMDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}DCPCMSoundDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}MPEGAudioDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}ImportDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}BWFImportDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}AuxiliaryDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}RecordingDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}FilmDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}TapeDescriptor"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "EssenceDescriptorStrongReference", propOrder = {
    "aifcDescriptor",
    "dateTimeDescriptor",
    "dataEssenceDescriptor",
    "rp217Descriptor",
    "auxDataEssenceDescriptor",
    "dcTimedTextDescriptor",
    "vbiDataDescriptor",
    "ancDataDescriptor",
    "htmlParsedTextDescriptor",
    "xmlDescriptor",
    "stlDescriptor",
    "multipleDescriptor",
    "htmlDescriptor",
    "rgbaDescriptor",
    "tiffPictureEssenceDescriptor",
    "cdciDescriptor",
    "mpegVideoDescriptor",
    "vc1VideoDescriptor",
    "tiffDescriptor",
    "waveDescriptor",
    "soundDescriptor",
    "wavepcmDescriptor",
    "aes3PCMDescriptor",
    "dcpcmSoundDescriptor",
    "mpegAudioDescriptor",
    "importDescriptor",
    "bwfImportDescriptor",
    "auxiliaryDescriptor",
    "recordingDescriptor",
    "filmDescriptor",
    "tapeDescriptor"
})
public class EssenceDescriptorStrongReference {

    @XmlElement(name = "AIFCDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected AIFCDescriptor aifcDescriptor;
    @XmlElement(name = "DateTimeDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected DateTimeDescriptor dateTimeDescriptor;
    @XmlElement(name = "DataEssenceDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected DataEssenceDescriptor dataEssenceDescriptor;
    @XmlElement(name = "RP217Descriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected RP217Descriptor rp217Descriptor;
    @XmlElement(name = "AuxDataEssenceDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected AuxDataEssenceDescriptor auxDataEssenceDescriptor;
    @XmlElement(name = "DCTimedTextDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected DCTimedTextDescriptor dcTimedTextDescriptor;
    @XmlElement(name = "VBIDataDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected VBIDataDescriptor vbiDataDescriptor;
    @XmlElement(name = "ANCDataDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected ANCDataDescriptor ancDataDescriptor;
    @XmlElement(name = "HTMLParsedTextDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected HTMLParsedTextDescriptor htmlParsedTextDescriptor;
    @XmlElement(name = "XMLDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected XMLDescriptor xmlDescriptor;
    @XmlElement(name = "STLDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected STLDescriptor stlDescriptor;
    @XmlElement(name = "MultipleDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected MultipleDescriptor multipleDescriptor;
    @XmlElement(name = "HTMLDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected HTMLDescriptor htmlDescriptor;
    @XmlElement(name = "RGBADescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected RGBADescriptor rgbaDescriptor;
    @XmlElement(name = "TIFFPictureEssenceDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected TIFFPictureEssenceDescriptor tiffPictureEssenceDescriptor;
    @XmlElement(name = "CDCIDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected CDCIDescriptor cdciDescriptor;
    @XmlElement(name = "MPEGVideoDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected MPEGVideoDescriptor mpegVideoDescriptor;
    @XmlElement(name = "VC1VideoDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected VC1VideoDescriptor vc1VideoDescriptor;
    @XmlElement(name = "TIFFDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected TIFFDescriptor tiffDescriptor;
    @XmlElement(name = "WAVEDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected WAVEDescriptor waveDescriptor;
    @XmlElement(name = "SoundDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected SoundDescriptor soundDescriptor;
    @XmlElement(name = "WAVEPCMDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected WAVEPCMDescriptor wavepcmDescriptor;
    @XmlElement(name = "AES3PCMDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected AES3PCMDescriptor aes3PCMDescriptor;
    @XmlElement(name = "DCPCMSoundDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected DCPCMSoundDescriptor dcpcmSoundDescriptor;
    @XmlElement(name = "MPEGAudioDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected MPEGAudioDescriptor mpegAudioDescriptor;
    @XmlElement(name = "ImportDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected ImportDescriptor importDescriptor;
    @XmlElement(name = "BWFImportDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected BWFImportDescriptor bwfImportDescriptor;
    @XmlElement(name = "AuxiliaryDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected AuxiliaryDescriptor auxiliaryDescriptor;
    @XmlElement(name = "RecordingDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected RecordingDescriptor recordingDescriptor;
    @XmlElement(name = "FilmDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected FilmDescriptor filmDescriptor;
    @XmlElement(name = "TapeDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf")
    protected TapeDescriptor tapeDescriptor;

    /**
     * Gets the value of the aifcDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link AIFCDescriptor }
     *     
     */
    public AIFCDescriptor getAIFCDescriptor() {
        return aifcDescriptor;
    }

    /**
     * Sets the value of the aifcDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link AIFCDescriptor }
     *     
     */
    public void setAIFCDescriptor(AIFCDescriptor value) {
        this.aifcDescriptor = value;
    }

    /**
     * Gets the value of the dateTimeDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link DateTimeDescriptor }
     *     
     */
    public DateTimeDescriptor getDateTimeDescriptor() {
        return dateTimeDescriptor;
    }

    /**
     * Sets the value of the dateTimeDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link DateTimeDescriptor }
     *     
     */
    public void setDateTimeDescriptor(DateTimeDescriptor value) {
        this.dateTimeDescriptor = value;
    }

    /**
     * Gets the value of the dataEssenceDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link DataEssenceDescriptor }
     *     
     */
    public DataEssenceDescriptor getDataEssenceDescriptor() {
        return dataEssenceDescriptor;
    }

    /**
     * Sets the value of the dataEssenceDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataEssenceDescriptor }
     *     
     */
    public void setDataEssenceDescriptor(DataEssenceDescriptor value) {
        this.dataEssenceDescriptor = value;
    }

    /**
     * Gets the value of the rp217Descriptor property.
     * 
     * @return
     *     possible object is
     *     {@link RP217Descriptor }
     *     
     */
    public RP217Descriptor getRP217Descriptor() {
        return rp217Descriptor;
    }

    /**
     * Sets the value of the rp217Descriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link RP217Descriptor }
     *     
     */
    public void setRP217Descriptor(RP217Descriptor value) {
        this.rp217Descriptor = value;
    }

    /**
     * Gets the value of the auxDataEssenceDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link AuxDataEssenceDescriptor }
     *     
     */
    public AuxDataEssenceDescriptor getAuxDataEssenceDescriptor() {
        return auxDataEssenceDescriptor;
    }

    /**
     * Sets the value of the auxDataEssenceDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link AuxDataEssenceDescriptor }
     *     
     */
    public void setAuxDataEssenceDescriptor(AuxDataEssenceDescriptor value) {
        this.auxDataEssenceDescriptor = value;
    }

    /**
     * Gets the value of the dcTimedTextDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link DCTimedTextDescriptor }
     *     
     */
    public DCTimedTextDescriptor getDCTimedTextDescriptor() {
        return dcTimedTextDescriptor;
    }

    /**
     * Sets the value of the dcTimedTextDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link DCTimedTextDescriptor }
     *     
     */
    public void setDCTimedTextDescriptor(DCTimedTextDescriptor value) {
        this.dcTimedTextDescriptor = value;
    }

    /**
     * Gets the value of the vbiDataDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link VBIDataDescriptor }
     *     
     */
    public VBIDataDescriptor getVBIDataDescriptor() {
        return vbiDataDescriptor;
    }

    /**
     * Sets the value of the vbiDataDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link VBIDataDescriptor }
     *     
     */
    public void setVBIDataDescriptor(VBIDataDescriptor value) {
        this.vbiDataDescriptor = value;
    }

    /**
     * Gets the value of the ancDataDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link ANCDataDescriptor }
     *     
     */
    public ANCDataDescriptor getANCDataDescriptor() {
        return ancDataDescriptor;
    }

    /**
     * Sets the value of the ancDataDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link ANCDataDescriptor }
     *     
     */
    public void setANCDataDescriptor(ANCDataDescriptor value) {
        this.ancDataDescriptor = value;
    }

    /**
     * Gets the value of the htmlParsedTextDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link HTMLParsedTextDescriptor }
     *     
     */
    public HTMLParsedTextDescriptor getHTMLParsedTextDescriptor() {
        return htmlParsedTextDescriptor;
    }

    /**
     * Sets the value of the htmlParsedTextDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link HTMLParsedTextDescriptor }
     *     
     */
    public void setHTMLParsedTextDescriptor(HTMLParsedTextDescriptor value) {
        this.htmlParsedTextDescriptor = value;
    }

    /**
     * Gets the value of the xmlDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link XMLDescriptor }
     *     
     */
    public XMLDescriptor getXMLDescriptor() {
        return xmlDescriptor;
    }

    /**
     * Sets the value of the xmlDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLDescriptor }
     *     
     */
    public void setXMLDescriptor(XMLDescriptor value) {
        this.xmlDescriptor = value;
    }

    /**
     * Gets the value of the stlDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link STLDescriptor }
     *     
     */
    public STLDescriptor getSTLDescriptor() {
        return stlDescriptor;
    }

    /**
     * Sets the value of the stlDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link STLDescriptor }
     *     
     */
    public void setSTLDescriptor(STLDescriptor value) {
        this.stlDescriptor = value;
    }

    /**
     * Gets the value of the multipleDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link MultipleDescriptor }
     *     
     */
    public MultipleDescriptor getMultipleDescriptor() {
        return multipleDescriptor;
    }

    /**
     * Sets the value of the multipleDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link MultipleDescriptor }
     *     
     */
    public void setMultipleDescriptor(MultipleDescriptor value) {
        this.multipleDescriptor = value;
    }

    /**
     * Gets the value of the htmlDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link HTMLDescriptor }
     *     
     */
    public HTMLDescriptor getHTMLDescriptor() {
        return htmlDescriptor;
    }

    /**
     * Sets the value of the htmlDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link HTMLDescriptor }
     *     
     */
    public void setHTMLDescriptor(HTMLDescriptor value) {
        this.htmlDescriptor = value;
    }

    /**
     * Gets the value of the rgbaDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link RGBADescriptor }
     *     
     */
    public RGBADescriptor getRGBADescriptor() {
        return rgbaDescriptor;
    }

    /**
     * Sets the value of the rgbaDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link RGBADescriptor }
     *     
     */
    public void setRGBADescriptor(RGBADescriptor value) {
        this.rgbaDescriptor = value;
    }

    /**
     * Gets the value of the tiffPictureEssenceDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link TIFFPictureEssenceDescriptor }
     *     
     */
    public TIFFPictureEssenceDescriptor getTIFFPictureEssenceDescriptor() {
        return tiffPictureEssenceDescriptor;
    }

    /**
     * Sets the value of the tiffPictureEssenceDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link TIFFPictureEssenceDescriptor }
     *     
     */
    public void setTIFFPictureEssenceDescriptor(TIFFPictureEssenceDescriptor value) {
        this.tiffPictureEssenceDescriptor = value;
    }

    /**
     * Gets the value of the cdciDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link CDCIDescriptor }
     *     
     */
    public CDCIDescriptor getCDCIDescriptor() {
        return cdciDescriptor;
    }

    /**
     * Sets the value of the cdciDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link CDCIDescriptor }
     *     
     */
    public void setCDCIDescriptor(CDCIDescriptor value) {
        this.cdciDescriptor = value;
    }

    /**
     * Gets the value of the mpegVideoDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link MPEGVideoDescriptor }
     *     
     */
    public MPEGVideoDescriptor getMPEGVideoDescriptor() {
        return mpegVideoDescriptor;
    }

    /**
     * Sets the value of the mpegVideoDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link MPEGVideoDescriptor }
     *     
     */
    public void setMPEGVideoDescriptor(MPEGVideoDescriptor value) {
        this.mpegVideoDescriptor = value;
    }

    /**
     * Gets the value of the vc1VideoDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link VC1VideoDescriptor }
     *     
     */
    public VC1VideoDescriptor getVC1VideoDescriptor() {
        return vc1VideoDescriptor;
    }

    /**
     * Sets the value of the vc1VideoDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link VC1VideoDescriptor }
     *     
     */
    public void setVC1VideoDescriptor(VC1VideoDescriptor value) {
        this.vc1VideoDescriptor = value;
    }

    /**
     * Gets the value of the tiffDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link TIFFDescriptor }
     *     
     */
    public TIFFDescriptor getTIFFDescriptor() {
        return tiffDescriptor;
    }

    /**
     * Sets the value of the tiffDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link TIFFDescriptor }
     *     
     */
    public void setTIFFDescriptor(TIFFDescriptor value) {
        this.tiffDescriptor = value;
    }

    /**
     * Gets the value of the waveDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link WAVEDescriptor }
     *     
     */
    public WAVEDescriptor getWAVEDescriptor() {
        return waveDescriptor;
    }

    /**
     * Sets the value of the waveDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link WAVEDescriptor }
     *     
     */
    public void setWAVEDescriptor(WAVEDescriptor value) {
        this.waveDescriptor = value;
    }

    /**
     * Gets the value of the soundDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link SoundDescriptor }
     *     
     */
    public SoundDescriptor getSoundDescriptor() {
        return soundDescriptor;
    }

    /**
     * Sets the value of the soundDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link SoundDescriptor }
     *     
     */
    public void setSoundDescriptor(SoundDescriptor value) {
        this.soundDescriptor = value;
    }

    /**
     * Gets the value of the wavepcmDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link WAVEPCMDescriptor }
     *     
     */
    public WAVEPCMDescriptor getWAVEPCMDescriptor() {
        return wavepcmDescriptor;
    }

    /**
     * Sets the value of the wavepcmDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link WAVEPCMDescriptor }
     *     
     */
    public void setWAVEPCMDescriptor(WAVEPCMDescriptor value) {
        this.wavepcmDescriptor = value;
    }

    /**
     * Gets the value of the aes3PCMDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link AES3PCMDescriptor }
     *     
     */
    public AES3PCMDescriptor getAES3PCMDescriptor() {
        return aes3PCMDescriptor;
    }

    /**
     * Sets the value of the aes3PCMDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link AES3PCMDescriptor }
     *     
     */
    public void setAES3PCMDescriptor(AES3PCMDescriptor value) {
        this.aes3PCMDescriptor = value;
    }

    /**
     * Gets the value of the dcpcmSoundDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link DCPCMSoundDescriptor }
     *     
     */
    public DCPCMSoundDescriptor getDCPCMSoundDescriptor() {
        return dcpcmSoundDescriptor;
    }

    /**
     * Sets the value of the dcpcmSoundDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link DCPCMSoundDescriptor }
     *     
     */
    public void setDCPCMSoundDescriptor(DCPCMSoundDescriptor value) {
        this.dcpcmSoundDescriptor = value;
    }

    /**
     * Gets the value of the mpegAudioDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link MPEGAudioDescriptor }
     *     
     */
    public MPEGAudioDescriptor getMPEGAudioDescriptor() {
        return mpegAudioDescriptor;
    }

    /**
     * Sets the value of the mpegAudioDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link MPEGAudioDescriptor }
     *     
     */
    public void setMPEGAudioDescriptor(MPEGAudioDescriptor value) {
        this.mpegAudioDescriptor = value;
    }

    /**
     * Gets the value of the importDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link ImportDescriptor }
     *     
     */
    public ImportDescriptor getImportDescriptor() {
        return importDescriptor;
    }

    /**
     * Sets the value of the importDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link ImportDescriptor }
     *     
     */
    public void setImportDescriptor(ImportDescriptor value) {
        this.importDescriptor = value;
    }

    /**
     * Gets the value of the bwfImportDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link BWFImportDescriptor }
     *     
     */
    public BWFImportDescriptor getBWFImportDescriptor() {
        return bwfImportDescriptor;
    }

    /**
     * Sets the value of the bwfImportDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link BWFImportDescriptor }
     *     
     */
    public void setBWFImportDescriptor(BWFImportDescriptor value) {
        this.bwfImportDescriptor = value;
    }

    /**
     * Gets the value of the auxiliaryDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link AuxiliaryDescriptor }
     *     
     */
    public AuxiliaryDescriptor getAuxiliaryDescriptor() {
        return auxiliaryDescriptor;
    }

    /**
     * Sets the value of the auxiliaryDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link AuxiliaryDescriptor }
     *     
     */
    public void setAuxiliaryDescriptor(AuxiliaryDescriptor value) {
        this.auxiliaryDescriptor = value;
    }

    /**
     * Gets the value of the recordingDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link RecordingDescriptor }
     *     
     */
    public RecordingDescriptor getRecordingDescriptor() {
        return recordingDescriptor;
    }

    /**
     * Sets the value of the recordingDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link RecordingDescriptor }
     *     
     */
    public void setRecordingDescriptor(RecordingDescriptor value) {
        this.recordingDescriptor = value;
    }

    /**
     * Gets the value of the filmDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link FilmDescriptor }
     *     
     */
    public FilmDescriptor getFilmDescriptor() {
        return filmDescriptor;
    }

    /**
     * Sets the value of the filmDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link FilmDescriptor }
     *     
     */
    public void setFilmDescriptor(FilmDescriptor value) {
        this.filmDescriptor = value;
    }

    /**
     * Gets the value of the tapeDescriptor property.
     * 
     * @return
     *     possible object is
     *     {@link TapeDescriptor }
     *     
     */
    public TapeDescriptor getTapeDescriptor() {
        return tapeDescriptor;
    }

    /**
     * Sets the value of the tapeDescriptor property.
     * 
     * @param value
     *     allowed object is
     *     {@link TapeDescriptor }
     *     
     */
    public void setTapeDescriptor(TapeDescriptor value) {
        this.tapeDescriptor = value;
    }

}
