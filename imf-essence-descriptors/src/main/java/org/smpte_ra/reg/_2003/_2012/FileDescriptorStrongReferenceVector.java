//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.08.11 at 01:51:42 PM MSK 
//


package org.smpte_ra.reg._2003._2012;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import org.smpte_ra.reg._395._2014._13._1.aaf.AES3PCMDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.AIFCDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.ANCDataDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.AuxDataEssenceDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.CDCIDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.DCPCMSoundDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.DCTimedTextDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.DataEssenceDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.DateTimeDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.HTMLDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.HTMLParsedTextDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.MPEGAudioDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.MPEGVideoDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.MultipleDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.RGBADescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.RP217Descriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.STLDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.SoundDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.TIFFDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.TIFFPictureEssenceDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.VBIDataDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.VC1VideoDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.WAVEDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.WAVEPCMDescriptor;
import org.smpte_ra.reg._395._2014._13._1.aaf.XMLDescriptor;


/**
 * <p>Java class for FileDescriptorStrongReferenceVector complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FileDescriptorStrongReferenceVector">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}AIFCDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}DateTimeDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}DataEssenceDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}RP217Descriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}AuxDataEssenceDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}DCTimedTextDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}VBIDataDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}ANCDataDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}HTMLParsedTextDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}XMLDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}STLDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}MultipleDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}HTMLDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}RGBADescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}TIFFPictureEssenceDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}CDCIDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}MPEGVideoDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}VC1VideoDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}TIFFDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}WAVEDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}SoundDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}WAVEPCMDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}AES3PCMDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}DCPCMSoundDescriptor"/>
 *         &lt;element ref="{http://www.smpte-ra.org/reg/395/2014/13/1/aaf}MPEGAudioDescriptor"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FileDescriptorStrongReferenceVector", propOrder = {
    "aifcDescriptorOrDateTimeDescriptorOrDataEssenceDescriptor"
})
public class FileDescriptorStrongReferenceVector {

    @XmlElements({
        @XmlElement(name = "AIFCDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = AIFCDescriptor.class),
        @XmlElement(name = "DateTimeDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = DateTimeDescriptor.class),
        @XmlElement(name = "DataEssenceDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = DataEssenceDescriptor.class),
        @XmlElement(name = "RP217Descriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = RP217Descriptor.class),
        @XmlElement(name = "AuxDataEssenceDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = AuxDataEssenceDescriptor.class),
        @XmlElement(name = "DCTimedTextDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = DCTimedTextDescriptor.class),
        @XmlElement(name = "VBIDataDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = VBIDataDescriptor.class),
        @XmlElement(name = "ANCDataDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = ANCDataDescriptor.class),
        @XmlElement(name = "HTMLParsedTextDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = HTMLParsedTextDescriptor.class),
        @XmlElement(name = "XMLDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = XMLDescriptor.class),
        @XmlElement(name = "STLDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = STLDescriptor.class),
        @XmlElement(name = "MultipleDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = MultipleDescriptor.class),
        @XmlElement(name = "HTMLDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = HTMLDescriptor.class),
        @XmlElement(name = "RGBADescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = RGBADescriptor.class),
        @XmlElement(name = "TIFFPictureEssenceDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = TIFFPictureEssenceDescriptor.class),
        @XmlElement(name = "CDCIDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = CDCIDescriptor.class),
        @XmlElement(name = "MPEGVideoDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = MPEGVideoDescriptor.class),
        @XmlElement(name = "VC1VideoDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = VC1VideoDescriptor.class),
        @XmlElement(name = "TIFFDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = TIFFDescriptor.class),
        @XmlElement(name = "WAVEDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = WAVEDescriptor.class),
        @XmlElement(name = "SoundDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = SoundDescriptor.class),
        @XmlElement(name = "WAVEPCMDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = WAVEPCMDescriptor.class),
        @XmlElement(name = "AES3PCMDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = AES3PCMDescriptor.class),
        @XmlElement(name = "DCPCMSoundDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = DCPCMSoundDescriptor.class),
        @XmlElement(name = "MPEGAudioDescriptor", namespace = "http://www.smpte-ra.org/reg/395/2014/13/1/aaf", type = MPEGAudioDescriptor.class)
    })
    protected List<Object> aifcDescriptorOrDateTimeDescriptorOrDataEssenceDescriptor;

    /**
     * Gets the value of the aifcDescriptorOrDateTimeDescriptorOrDataEssenceDescriptor property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the aifcDescriptorOrDateTimeDescriptorOrDataEssenceDescriptor property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAIFCDescriptorOrDateTimeDescriptorOrDataEssenceDescriptor().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AIFCDescriptor }
     * {@link DateTimeDescriptor }
     * {@link DataEssenceDescriptor }
     * {@link RP217Descriptor }
     * {@link AuxDataEssenceDescriptor }
     * {@link DCTimedTextDescriptor }
     * {@link VBIDataDescriptor }
     * {@link ANCDataDescriptor }
     * {@link HTMLParsedTextDescriptor }
     * {@link XMLDescriptor }
     * {@link STLDescriptor }
     * {@link MultipleDescriptor }
     * {@link HTMLDescriptor }
     * {@link RGBADescriptor }
     * {@link TIFFPictureEssenceDescriptor }
     * {@link CDCIDescriptor }
     * {@link MPEGVideoDescriptor }
     * {@link VC1VideoDescriptor }
     * {@link TIFFDescriptor }
     * {@link WAVEDescriptor }
     * {@link SoundDescriptor }
     * {@link WAVEPCMDescriptor }
     * {@link AES3PCMDescriptor }
     * {@link DCPCMSoundDescriptor }
     * {@link MPEGAudioDescriptor }
     * 
     * 
     */
    public List<Object> getAIFCDescriptorOrDateTimeDescriptorOrDataEssenceDescriptor() {
        if (aifcDescriptorOrDateTimeDescriptorOrDataEssenceDescriptor == null) {
            aifcDescriptorOrDateTimeDescriptorOrDataEssenceDescriptor = new ArrayList<Object>();
        }
        return this.aifcDescriptorOrDateTimeDescriptorOrDataEssenceDescriptor;
    }

}
