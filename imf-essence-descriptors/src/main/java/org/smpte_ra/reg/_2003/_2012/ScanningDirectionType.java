//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.08.11 at 01:51:42 PM MSK 
//


package org.smpte_ra.reg._2003._2012;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ScanningDirectionType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ScanningDirectionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="ScanningDirection_LeftToRightTopToBottom"/>
 *     &lt;enumeration value="ScanningDirection_RightToLeftTopToBottom"/>
 *     &lt;enumeration value="ScanningDirection_LeftToRightBottomToTop"/>
 *     &lt;enumeration value="ScanningDirection_RightToLeftBottomToTop"/>
 *     &lt;enumeration value="ScanningDirection_TopToBottomLeftToRight"/>
 *     &lt;enumeration value="ScanningDirection_TopToBottomRightToLeft"/>
 *     &lt;enumeration value="ScanningDirection_BottomToTopLeftToRight"/>
 *     &lt;enumeration value="ScanningDirection_BottomToTopRightToLeft"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ScanningDirectionType")
@XmlEnum
public enum ScanningDirectionType {

    @XmlEnumValue("ScanningDirection_LeftToRightTopToBottom")
    SCANNING_DIRECTION_LEFT_TO_RIGHT_TOP_TO_BOTTOM("ScanningDirection_LeftToRightTopToBottom"),
    @XmlEnumValue("ScanningDirection_RightToLeftTopToBottom")
    SCANNING_DIRECTION_RIGHT_TO_LEFT_TOP_TO_BOTTOM("ScanningDirection_RightToLeftTopToBottom"),
    @XmlEnumValue("ScanningDirection_LeftToRightBottomToTop")
    SCANNING_DIRECTION_LEFT_TO_RIGHT_BOTTOM_TO_TOP("ScanningDirection_LeftToRightBottomToTop"),
    @XmlEnumValue("ScanningDirection_RightToLeftBottomToTop")
    SCANNING_DIRECTION_RIGHT_TO_LEFT_BOTTOM_TO_TOP("ScanningDirection_RightToLeftBottomToTop"),
    @XmlEnumValue("ScanningDirection_TopToBottomLeftToRight")
    SCANNING_DIRECTION_TOP_TO_BOTTOM_LEFT_TO_RIGHT("ScanningDirection_TopToBottomLeftToRight"),
    @XmlEnumValue("ScanningDirection_TopToBottomRightToLeft")
    SCANNING_DIRECTION_TOP_TO_BOTTOM_RIGHT_TO_LEFT("ScanningDirection_TopToBottomRightToLeft"),
    @XmlEnumValue("ScanningDirection_BottomToTopLeftToRight")
    SCANNING_DIRECTION_BOTTOM_TO_TOP_LEFT_TO_RIGHT("ScanningDirection_BottomToTopLeftToRight"),
    @XmlEnumValue("ScanningDirection_BottomToTopRightToLeft")
    SCANNING_DIRECTION_BOTTOM_TO_TOP_RIGHT_TO_LEFT("ScanningDirection_BottomToTopRightToLeft");
    private final String value;

    ScanningDirectionType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ScanningDirectionType fromValue(String v) {
        for (ScanningDirectionType c: ScanningDirectionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
