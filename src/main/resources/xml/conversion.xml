<?xml version="1.0" encoding="UTF-8"?>
<conversion xmlns="http://conversion.imf.netflix.com">
    <formats>
        <!--
            specific configuration for each format
        -->
        <format name="dpp">
            <!--
                tmp context for temporary template parameters
            -->
            <tmpContext>
                <param id="videoEncoded">output.x264</param>
                <param id="audioEncoded">output.pcm</param>
                <param id="mediaInfoOutput">mediaInfo.xml</param>
            </tmpContext>

            <mediaInfoCommandVideo>%{tool.ffprobe} -select_streams v:0 -show_streams -noprivate -print_format xml=x=1 %{output.mediaInfoInput}</mediaInfoCommandVideo>
            <mediaInfoCommandAudio>%{tool.ffprobe} -select_streams a:0 -show_streams -noprivate -print_format xml=x=1 %{output.mediaInfoInput}</mediaInfoCommandAudio>
            <mediaInfoCommandSubtitle>%{tool.ffprobe} -select_streams s:0 -show_streams -noprivate -print_format xml=x=1 %{output.mediaInfoInput}</mediaInfoCommandSubtitle>

            <!--
                Destination parameters for conversion
             -->
            <conversionParameters>
                <video>
                    <width>1920</width>
                    <height>1080</height>
                    <frameRate>25</frameRate>
                    <pixelFormat>yuv422p10le</pixelFormat>
                    <bitDepth>10</bitDepth>
                </video>
                <audio>
                    <sampleRate>48000</sampleRate>
                    <bitsSample>24</bitsSample>
                </audio>
            </conversionParameters>

            <formatConfigurations>
                <formatConfiguration name="main">

                    <!--
                        1. decode each video segment and redirect output to encode's input
                        => flatten encoded video
                    -->
                    <execEachSequence type="video" name="encodeVideo">
                        <pipe>
                            <cycle>
                                <execEachSegment name="decode_video">
                                    <execOnce name="decode_video">
                                        %{tool.ffmpeg} -y -i %{resource.essence} -ss %{resource.startTime}
                                        -t %{resource.duration} -an -vf scale=1920:1080,fps=25
                                        -pix_fmt yuv422p10le -f rawvideo -
                                    </execOnce>
                                </execEachSegment>
                            </cycle>
                            <execOnce name="encode_video">
                                %{tool.x264} --input-res 1920x1080 --input-csp i422 --input-depth 10 -
                                --colorprim bt709 --transfer bt709 --colormatrix bt709 --tune psnr
                                --fps 25/1 --interlaced --force-cfr --output-csp i422
                                --avcintra-class 100 -o %{tmp.videoEncoded}
                            </execOnce>
                        </pipe>
                        <dynamicParameter name="concatAudioInput" concat="true">-i %{seq.num}-%{tmp.videoEncoded}
                        </dynamicParameter>
                    </execEachSequence>

                    <!--
                        2. decode each audio segment and redirect output to encode's input
                           => flatten encoded audio
                    -->
                    <execEachSequence type="audio" name="encodeAudio">
                        <pipe>
                            <cycle>
                                <execEachSegment name="decode_audio">
                                    <execOnce name="decode_audio">
                                        %{tool.ffmpeg} -i %{resource.essence} -ss %{resource.startTime}
                                        -t %{resource.duration} -vn -af aresample=48000
                                        -acodec pcm_s24le -f s24le -
                                    </execOnce>
                                </execEachSegment>
                            </cycle>
                            <execOnce name="encode_audio">
                                %{tool.ffmpeg} -f s24le -i - -vn -c:a copy -f s24le %{tmp.audioEncoded}
                            </execOnce>
                        </pipe>
                    </execEachSequence>


                    <!--
                        3. create output .mxf from flatten encoded video and audio
                    -->
                    <execOnce name="muxing_mxf">
                        %{tool.bmx} -t as11op1a -o %{output.mxf}
                        --avci100_1080i %{tmp.videoEncoded}
                        -q 24 -s 48000 --audio-chan %{dynamic.audioChannels}
                        --pcm %{tmp.audioEncoded}
                    </execOnce>

                </formatConfiguration>
            </formatConfigurations>

        </format>
    </formats>
</conversion>

